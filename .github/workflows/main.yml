name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      FLUTTER_VERSION: '3.27.4'
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Clean dependencies
      run: flutter clean

    - name: Install dependencies
      run: flutter pub get

    - name: Run Unit Tests
      run: flutter test
      continue-on-error: false 

    - name: Build APK
      run: flutter build apk --split-per-abi --release --build-name $GITHUB_REF_NAME

    - name: Upload APK as artifact
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || format('commit-{0}', github.sha) }}
        path: build/app/outputs/apk/

    - name: Get short commit hash
      id: get_short_hash
      run: echo "::set-output name=short_hash::$(git rev-parse --short HEAD)"

    - name: Create GitHub Tag
      if: github.ref == 'refs/heads/main'
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        curl -X POST -H "Authorization: token $PAT_TOKEN" \
          -d "{\"ref\":\"refs/tags/${{ steps.get_short_hash.outputs.short_hash }}\",\"sha\":\"${GITHUB_SHA}\"}" \
          https://api.github.com/repos/${{ github.repository }}/git/refs

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: ncipollo/release-action@v1.10.0
      with:
        token: ${{ secrets.PAT_TOKEN }}
        tag: ${{ steps.get_short_hash.outputs.short_hash }}
        allowUpdates: true
        artifacts: "build/app/outputs/apk/release/*.apk"
